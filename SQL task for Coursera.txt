Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help
 you profile and understand the data just like a data scientist would. For this first part of the 
 assignment, you will be assessed both on the correctness of your findings, as well as the code you 
 used to arrive at your answer. You will be graded on how easy your code is to read, so remember to 
 use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis 
of the data for a particular research question you want to answer. You will be required to prepare the
 dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on 
 how easy your code is to read, so use proper formatting and comments to illustrate and communicate 
 your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being 
asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet 
so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, 
Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use 
Word or some other page layout application, just be careful to make sure your answers and code are lined 
appropriately.

In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000;
ii. Business table = 10000;
iii. Category table = 10000;
iv. Checkin table = 10000;
v. elite_years table = 10000;
vi. friend table =  10000;
vii. hours table = 10000;
viii. photo table =  10000;
ix. review table =  10000;
x. tip table =  10000;
xi. user table = 10000;
	
SQL Code:

SELECT *
From table_name;

2. Find the total distinct records by either the foreign key or primary key for each table. 
If two foreign keys are listed in the table, please specify which foreign key.

i. Business (id) = 10000
iii. Category (business_id) = 2643
iv. Attribute (bussiness_id) = 1115
v. Review (id), (bussiness_id <- foreign key), (user_id <- foreign key) = 10000; 8090; 9581;
vi. Checkin (bussiness_id) = 493
vii. Photo(id), (business_id <- foreign key) = 10000; 6493
viii. Tip (user_id), (business_id <- foreign key)= 537; 3979
ix. User (id) = 10000
x. Friend (user_id) = 11
xi. Elite_years (user_id)= 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	

SQL Code:

SELECT count(distinct key_name)
From table_name;


3. Are there any columns with null values in the Users table? 
Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
	
	Select count(*)
	From user
	Where id IS NULL
	OR name IS NULL
	OR review_count IS NULL
	OR yelping_since IS NULL
	OR useful IS NULL
	OR funny IS NULL
	OR cool IS NULL
	OR fans IS NULL
	OR average_stars IS NULL
	OR compliment_hot IS NULL
	OR compliment_more IS NULL
	OR compliment_profile IS NULL
	OR compliment_cute IS NULL
	OR compliment_list IS NULL
	OR compliment_note IS NULL
	OR compliment_plain IS NULL
	OR compliment_cool IS NULL
	OR compliment_funny IS NULL
	OR compliment_writer IS NULL
	OR compliment_photos IS NULL;

	
4. For each table and column listed below, display the smallest (minimum),
 largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0		max: 5.0		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max: 2000	avg: 24.2995
		
SQL Code:

Select  
min(column), 
max(column),
avg(column)
From table_name;

5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
SELECT city, sum(review_count) as Total_Review_Number
FROM business
GROUP BY city
ORDER BY Total_Review_Number DESC;	

	Copy and Paste the Result Below:
	
+-----------------+---------------------+
| city            | Total_Review_Number |
+-----------------+---------------------+
| Las Vegas       |               82854 |
| Phoenix         |               34503 |
| Toronto         |               24113 |
| Scottsdale      |               20614 |
| Charlotte       |               12523 |
| Henderson       |               10871 |
| Tempe           |               10504 |
| Pittsburgh      |                9798 |
| Montréal        |                9448 |
| Chandler        |                8112 |
| Mesa            |                6875 |
| Gilbert         |                6380 |
| Cleveland       |                5593 |
| Madison         |                5265 |
| Glendale        |                4406 |
| Mississauga     |                3814 |
| Edinburgh       |                2792 |
| Peoria          |                2624 |
| North Las Vegas |                2438 |
| Markham         |                2352 |
| Champaign       |                2029 |
| Stuttgart       |                1849 |
| Surprise        |                1520 |
| Lakewood        |                1465 |
| Goodyear        |                1155 |
+-----------------+---------------------+
(Output limit exceeded, 25 of 362 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

Select sum(review_count), stars
From business
Where city= 'Avon'
Group by stars
Order by stars asc;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------------------+-------+
| sum(review_count) | stars |
+-------------------+-------+
|                10 |   1.5 |
|                 6 |   2.5 |
|                88 |   3.5 |
|                21 |   4.0 |
|                31 |   4.5 |
|                 3 |   5.0 |
+-------------------+-------+

ii. Beachwood

SQL code used to arrive at answer:

Select sum(review_count), stars
From business
Where city= 'Beachwood'
Group by stars
Order by stars asc;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-------------------+-------+
| sum(review_count) | stars |
+-------------------+-------+
|                 8 |   2.0 |
|                 3 |   2.5 |
|                11 |   3.0 |
|                 6 |   3.5 |
|                69 |   4.0 |
|                17 |   4.5 |
|                23 |   5.0 |
+-------------------+-------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
	Select id, name, review_count
	From user
	Order by review_count desc
	Limit 3;
		
	Copy and Paste the Result Below:
		
+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
	Select name, review_count, fans
	From user
	Order by review_count desc
	Limit 10;
	
	No, it does not. Looking at the table below we can see that 
	9th person on the table has the biggest fans number, but review
	count is 2 times smaller comparing to the person who is in the 1st place. 
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
+-----------+--------------+------+
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: The word "love" is used 7,6 times more often than the word "hate". 
	The word "love" was used 1780 times and the word "hate" was used 232 times.

	
	SQL code used to arrive at answer:

	Select count(*)
	From review 
	Where text like '%love%';
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	Select name, fans
	From user
	Order by fans desc
	Limit 10;
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in 
that city or category by their overall star rating. 
Compare the businesses with 2-3 stars to the businesses with 4-5 
stars and answer the following questions. Include your code.

SELECT name, city, category, stars, hours, review_count, address
FROM business, category, hours
WHERE business.id = category.business_id 
and business.id = hours.business_id and city = 'Charlotte' 
and category = 'Shopping'
Group by name;

+-------------------------+-----------+----------+-------+----------------------+--------------+-------------------------+
| name                    | city      | category | stars | hours                | review_count | address                 |
+-------------------------+-----------+----------+-------+----------------------+--------------+-------------------------+
| Dilworth Custom Framing | Charlotte | Shopping |   3.5 | Saturday|10:00-15:00 |            6 | 125 Remount Rd, Ste C-2 |
| Freeman's Car Stereo    | Charlotte | Shopping |   3.5 | Saturday|9:00-17:00  |            8 | 4821 South Blvd         |
| HighLife North Tryon    | Charlotte | Shopping |   4.0 | Saturday|12:00-22:00 |            5 | 9605 N Tryon St, Ste C  |
+-------------------------+-----------+----------+-------+----------------------+--------------+-------------------------+
	
SELECT name, city, category, stars, hours, review_count, address
FROM business, category, hours
WHERE business.id = category.business_id 
and business.id = hours.business_id and city = 'Charlotte' 
and category = 'Electronics'
group by name;

+----------------------+-----------+-------------+-------+---------------------+--------------+-----------------+
| name                 | city      | category    | stars | hours               | review_count | address         |
+----------------------+-----------+-------------+-------+---------------------+--------------+-----------------+
| Freeman's Car Stereo | Charlotte | Electronics |   3.5 | Saturday|9:00-17:00 |            8 | 4821 South Blvd |
+----------------------+-----------+-------------+-------+---------------------+--------------+-----------------+
	
i. Do the two groups you chose to analyze have a different distribution of hours?

Since I chose Charlotte with categories of Shopping and Electronics, there are no 
businesses with lower stars value than 3.5. Working hours for all three companies is different.
However, Dilworth Custom Framing and Freeman's Car Stereo work similar hours. 

ii. Do the two groups you chose to analyze have a different number of reviews?
    
The number of reviews differ. However the difference isn't big. Freeman's Car Stereo has 
the biggest number of reviews. 	
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

I would guess that Dilworth Custom Framing  and HighLife North Tryon are close to each other. 
But without further investigation it's hard to tell. 
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you
 find between the ones that are still open and the ones that are closed? List at least two differences and
 the SQL code you used to arrive at your answer.
		
i. Difference 1:
         
The review count is way higher for the businesses which are still open.      
	  
ii. Difference 2:
         
Companies which are open is much more likely to be names as usefull, cool and funny.    
         
SQL code used for analysis:

SELECT
Sum(b.review_count),
count(r.useful)+ count(r.cool)+count(r.funny),
is_open
from business b INNER JOIN review r on b.id = r.id
group by b.is_open;	
	
3. For this last part of your analysis, you are going to choose the type of 
analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, 
clustering businesses to find commonalities or anomalies between them, 
predicting the overall star rating for a business, 
predicting the number of fans a user will have, and so on. 
These are just a few examples to get you started, so feel free to be creative and come up with your 
own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
  
I want to find our which 10 companies has the lowest star rating. Also, find out in which cities they are.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
For this analysis I'll need a name of the business, city in which the company is located. Also, I'll need 
stars and review count information. Also a category of the services.    
   
iii. Output of your finished dataset:

We can see that 3 out of 10 companies are located in Toronto. Also, 4 out of 10 companies are related to food category. We can assume that 
people are really critical when it comes to food service.
+---------------------------------------------+-----------------+-------+--------------+---------------------------+
| name                                        | city            | stars | review_count | category                  |
+---------------------------------------------+-----------------+-------+--------------+---------------------------+
| Burger King                                 | Mentor          |   1.0 |            4 | Restaurants               |
| Maximum Air Care                            | Phoenix         |   1.0 |            5 | Home Cleaning             |
| Fresh Bonsai Nails & Spa                    | Richmond Hill   |   1.5 |            7 | Beauty & Spas             |
| Holiday Inn Express Oakwood Village         | Oakwood Village |   1.5 |            9 | Event Planning & Services |
| Hsbc Bank Canada                            | Toronto         |   1.5 |            3 | Banks & Credit Unions     |
| Royal Dumpling                              | Toronto         |   1.5 |            4 | Chinese                   |
| 99 Cent Sushi                               | Toronto         |   2.0 |            5 | Restaurants               |
| Bella Terra Condominiums At Paradise Valley | Scottsdale      |   2.0 |            4 | Real Estate               |
| Budget Car Rental                           | Pineville       |   2.0 |            3 | Hotels & Travel           |
| Fiesta Ranchera                             | Champaign       |   2.0 |            4 | Mexican                   |
+---------------------------------------------+-----------------+-------+--------------+---------------------------+
         
iv. Provide the SQL code you used to create your final dataset:

SELECT name, city, stars, review_count, category
From business, category
where business.id = category.business_id
group by name
ORDER BY stars asc
LIMIT 10;